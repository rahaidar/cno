<div class="product-template__container page-width" itemscope itemtype="http://schema.org/Product" id="ProductSection-{{ section.id }}" data-section-id="{{ section.id }}" data-section-type="product" data-enable-history-state="true">
  <meta itemprop="name" content="{{ product.title }}">
  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | img_url: '800x' }}">

  {% comment %}
    Get first variant, or deep linked one
  {% endcomment %}
  {%- assign current_variant = product.selected_or_first_available_variant -%}
  {%- assign product_thumb_size = '110x110' -%}
  {%- assign product_image_zoom_size = '1024x1024' -%}
  {%- assign product_image_scale = '2' -%}
  {%- assign enable_zoom = section.settings.enable_zoom -%}

  {% case section.settings.image_size %}
    {% when 'small' %}
      {%- assign product_image_width = 'medium-up--one-third' -%}
      {%- assign product_description_width = 'medium-up--two-thirds' -%}
      {%- assign product_thumbnail_width = 'medium-up--one-third' -%}
      {%- assign product_image_size = '345x' -%}
    {% when 'medium' %}
      {%- assign product_image_width = 'medium-up--one-half' -%}
      {%- assign product_description_width = 'medium-up--one-half' -%}
      {%- assign product_thumbnail_width = 'medium-up--one-quarter' -%}
      {%- assign product_image_size = '530x' -%}
    {% when 'large' %}
      {%- assign product_image_width = 'medium-up--two-thirds' -%}
      {%- assign product_description_width = 'medium-up--one-third' -%}
      {%- assign product_thumbnail_width = 'medium-up--one-fifth' -%}
      {%- assign product_image_size = '720x' -%}
    {% when 'full' %}
      {%- assign product_image_width = '' -%}
      {%- assign product_description_width = '' -%}
      {%- assign product_thumbnail_width = 'medium-up--one-eighth' -%}
      {%- assign product_image_size = '1090x' -%}
      {%- assign enable_zoom = false -%}
  {% endcase %}

  <div class="grid product-single">
    <div class="grid__item product-single__photos {{ product_image_width }}{% if section.settings.image_size == 'full' %} product-single__photos--full{% endif %}">
      {%- assign featured_img_src = current_variant.featured_image.src | default: product.featured_image.src -%}
      {%- assign featured_img_alt = current_variant.featured_image.alt | default: product.featured_image.alt -%}
      <div id="FeaturedImageZoom-{{ section.id }}" class="product-single__photo{% if product.images.size > 1 %} product-single__photo--has-thumbnails{% endif %}" {% if enable_zoom %}data-zoom="{{ featured_img_src | img_url: product_image_zoom_size, scale: product_image_scale }}"{% endif %}>
        <img src="{{ featured_img_src | img_url: product_image_size, scale: product_image_scale }}" alt="{{ featured_img_alt }}" id="FeaturedImage-{{ section.id }}" class="product-featured-img{% if enable_zoom %} js-zoom-enabled{% endif %}">
      </div>

      {% if product.images.size > 1 %}
        {% if product.images.size > 3 %}
          {%- assign enable_thumbnail_slides = true -%}
        {% endif %}

        <div class="thumbnails-wrapper{% if enable_thumbnail_slides == true %} thumbnails-slider--active{% endif %}">
          {% if enable_thumbnail_slides == true %}
            <button type="button" class="btn btn--link medium-up--hide thumbnails-slider__btn thumbnails-slider__prev thumbnails-slider__prev--{{ section.id }}">
              {% include 'icon-chevron-left' %}
              <span class="icon__fallback-text">{{ 'sections.slideshow.previous_slide' | t }}</span>
            </button>
          {% endif %}
          <ul class="grid grid--uniform product-single__thumbnails product-single__thumbnails-{{ section.id }}">
            {% for image in product.images %}
              <li class="grid__item {{ product_thumbnail_width }} product-single__thumbnails-item">
                <a
                  href="{{ image.src | img_url: product_image_size, scale: product_image_scale }}"
                    class="text-link product-single__thumbnail product-single__thumbnail--{{ section.id }}"
                    {% if enable_zoom %}data-zoom="{{ image.src | img_url: product_image_zoom_size, scale: product_image_scale }}"{% endif %}>
                    <img class="product-single__thumbnail-image" src="{{ image.src | img_url: product_thumb_size, scale: product_image_scale }}" alt="{{ image.alt | escape }}">
                </a>
              </li>
            {% endfor %}
          </ul>
          {% if enable_thumbnail_slides == true %}
            <button type="button" class="btn btn--link medium-up--hide thumbnails-slider__btn thumbnails-slider__next thumbnails-slider__next--{{ section.id }}">
              {% include 'icon-chevron-right' %}
              <span class="icon__fallback-text">{{ 'sections.slideshow.next_slide' | t }}</span>
            </button>
          {% endif %}
        </div>
      {% endif %}
    </div>

    <div class="grid__item {{ product_description_width }}">
      <div class="product-single__meta">

        <h1 itemprop="name" class="product-single__title">{{ product.title }}</h1>
        <a href="#shopify-product-reviews"><span class="shopify-product-reviews-badge" data-id="{{ product.id }}"></span></a>

        {% if section.settings.show_vendor %}
          <p itemprop="brand" class="product-single__vendor">{{ product.vendor }}</p>
        {% endif %}

        <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
          <meta itemprop="priceCurrency" content="{{ shop.currency }}">

          <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">

          <p class="product-single__price product-single__price-{{ section.id }}{% unless current_variant.available %} product-price--sold-out{% endunless %}">
            {% if current_variant.compare_at_price > current_variant.price %}
                <span class="visually-hidden">{{ 'products.product.regular_price' | t }}</span>
                <s id="ComparePrice-{{ section.id }}">{{ current_variant.compare_at_price | money }}</s>
                <span class="product-price__price product-price__price-{{ section.id }} product-price__sale product-price__sale--single">
                  <span id="ProductPrice-{{ section.id }}"
                    itemprop="price" content="{{ current_variant.price | divided_by: 100.00 }}">
                    {{ current_variant.price | money }}
                  </span>
                  <span class="product-price__sale-label product-price__sale-label-{{ section.id }}">{{ 'products.product.on_sale' | t }}</span>
                </span>
            {% else %}
              <span class="visually-hidden">{{ 'products.product.regular_price' | t }}</span>
              <s id="ComparePrice-{{ section.id }}" class="hide">{{ current_variant.compare_at_price | money }}</s>
              <span class="product-price__price product-price__price-{{ section.id }}">
                <span id="ProductPrice-{{ section.id }}"
                  itemprop="price" content="{{ current_variant.price | divided_by: 100.00 }}">
                  {{ current_variant.price | money }}
                </span>
                <span class="product-price__sale-label product-price__sale-label-{{ section.id }} hide">{{ 'products.product.on_sale' | t }}</span>
              </span>
            {% endif %}
          </p>


          {% comment %}
            Metafield namespace = bundle
            products that have the bundle metafield are considered a bundled package
            bundle has the following keys (size,type,title,brand,category)
            Bundle.size = 10
            Bundle.type = tobacco
            Bundle.title = Flavor
            Bundle.brand = mazaya
            Bundle.category = gumlovers
          {% endcomment %}
          
          {% assign bundle = product.metafields.Bundle %}

          {% if bundle != empty %}
            <div id="line-item-properties" class="product-form__item">
              {% for i in (1..bundle.size) %}
                <p class="line-item-property__field">
                  <label for="property-{{i}}">{{ bundle.title }} #{{i}}:</label>
                  <select id="property-{{i}}" name="properties[{{ bundle.title }} #{{i}}]">
                    {% paginate collections.all.products by 1000 %}
                      {% for p in collections.all.products %}
                        {% if p.type == bundle.type and p.vendor == bundle.brand and p.tags contains bundle.category and p.metafields.Bundle == empty and p.variants[0].inventory_quantity > 0  %}
                          <option value="{{ p.id }}">{{ p.title }}</option>
                        {% endif %}
                      {% endfor %}  
                    {% endpaginate %}
                  </select>
                </p>
              {% endfor %}
            </div>
          {% endif %}


          <form action="/cart/add" method="post" enctype="multipart/form-data" class="product-form product-form-{{ section.id }}{% unless section.settings.show_variant_labels %} product-form--hide-variant-labels{% endunless %}" data-section="{{ section.id }}">
            {% unless product.options.size == 1 and product.variants[0].title == 'Default Title' %}
              {% for option in product.options_with_values %}
                <div class="selector-wrapper js product-form__item">
                  <label {% if option.name == 'default' %}class="label--hidden" {% endif %}for="SingleOptionSelector-{{ forloop.index0 }}">
                    {{ option.name }}
                  </label>
                  <select class="single-option-selector single-option-selector-{{ section.id }} product-form__input" id="SingleOptionSelector-{{ forloop.index0 }}" data-index="option{{ forloop.index }}">
                    {% for value in option.values %}
                      <option value="{{ value | escape }}"{% if option.selected_value == value %} selected="selected"{% endif %}>{{ value }}</option>
                    {% endfor %}
                  </select>
                </div>
              {% endfor %}
            {% endunless %}

            <select name="id" id="ProductSelect-{{ section.id }}" data-section="{{ section.id }}" class="product-form__variants no-js">
              {% for variant in product.variants %}
                {% if variant.available %}
                  <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">
                    {{ variant.title }}
                  </option>
                {% else %}
                  <option disabled="disabled">{{ variant.title }} - {{ 'products.product.sold_out' | t }}</option>
                {% endif %}
              {% endfor %}
            </select>

            {% if section.settings.show_quantity_selector %}
              <div class="product-form__item product-form__item--quantity">
                <label for="Quantity">{{ 'products.product.quantity' | t }}</label>
                <input type="number" id="Quantity" name="quantity" value="1" min="1" class="product-form__input" pattern="[0-9]*">
              </div>
            {% endif %}
            
            

            {% if bundle == empty %}
              {% comment %}Standard product item{% endcomment %}
              <div class="product-form__item product-form__item--submit">
                <button type="submit" name="add" id="AddToCart-{{ section.id }}" {% unless current_variant.available %}disabled="disabled"{% endunless %} class="btn product-form__cart-submit{% if product.options.size == 1 and product.variants[0].title == 'Default Title' %} product-form__cart-submit--small{% endif %}">
                  <span id="AddToCartText-{{ section.id }}">
                    {% unless current_variant.available %}
                      {{ 'products.product.sold_out' | t }}
                    {% else %}
                      {{ 'products.product.add_to_cart' | t }}
                    {% endunless %}
                  </span>
                </button>
              </div>
            {% else %}

              <script>
                
                var productsInventory = new Object();

                {% paginate collections.all.products by 1000 %}
                  {% for p in collections.all.products %}
                    {% if p.type == bundle.type and p.vendor == bundle.brand and p.tags contains bundle.category and p.metafields.Bundle == empty  %}
                      productsInventory[{{ p.id }}] = {{ p.variants[0].inventory_quantity }};
                    {% endif %}
                  {% endfor %}  
                {% endpaginate %}

                // Get Shopping Cart
                var mycart;
                Shopify.getCart(function(d) {
                  //alert(JSON.stringify(d));
                  mycart = JSON.parse(JSON.stringify(d));
                });

                function isEmpty(obj) {
                    for(var key in obj) {
                        if(obj.hasOwnProperty(key))
                            return false;
                    }
                    return true;
                }

                function InventoryValidated() {
                    var validated = false;
                    var products = [];
                    var products_cart = [];
                    var messages = [];
                    var ordered_qty = jQuery('#Quantity').val();

                    jQuery('#line-item-properties select > option:selected').each(function(e){
                          var pid = jQuery(this).val().substring(jQuery(this).val().indexOf('-')+1);

                          var idExists = 0;
                          for (var i=0;i<products.length;i++) {
                            if ("id" in products[i] && products[i].id == pid) {
                              // id exists in our products
                              products[i].qty += ordered_qty*1;
                              idExists = 1;
                              break;
                            }
                          }
                          if (idExists == 0) {
                            products.push({ id: pid, name: jQuery(this).text(), qty: ordered_qty*1});
                          }
                    });

                    // Check Availability
                    //alert(JSON.stringify(products));
                    if (mycart && !isEmpty(mycart) && mycart.items.length > 0) {
                        // Cart is not Empty
                        //alert(JSON.stringify(mycart));

                        for (var i=0;i<mycart.items.length;i++) {

                          var idExists = 0;
                          
                          if (mycart.items[i].properties && !isEmpty(mycart.items[i].properties)) {
                            // Bundle Item
                            // Loop through properties of mycart.items[i]
                            for (var item in mycart.items[i].properties) {
                              var item_id = item.substring(item.indexOf('-')+1);

                              idExists = 0;
                              for (var j=0;j<products_cart.length;j++) {
                                if ("id" in products_cart[j] && products_cart[j].id == item_id) {
                                  // id exists in our products
                                  products_cart[j].qty += mycart.items[i].quantity*1;
                                  idExists = 1;
                                  break;
                                }
                              }
                              if (idExists == 0) {
                                products_cart.push({ id: item_id, name: mycart.items[i].properties[item], qty: mycart.items[i].quantity*1});
                              }
                            }


                          } else {
                            // Non Bundle Item
                            for (var j=0;j<products_cart.length;j++) {
                              if ("id" in products_cart[j] && products_cart[j].id == mycart.items[i].product_id) {
                                // id exists in our products
                                products_cart[j].qty += mycart.items[i].quantity*1;
                                idExists = 1;
                                break;
                              }
                            }
                            if (idExists == 0) {
                              products_cart.push({ id: mycart.items[i].product_id, name: mycart.items[i].title, qty: mycart.items[i].quantity*1});
                            }
                          }
                        }

                        // test
                        //alert(JSON.stringify(products_cart));
                        for (var i=0;i<products.length;i++) {

                          // Get Qty from Cart
                          var qty_in_cart = 0;
                          for (var j=0;j<products_cart.length;j++) {
                            if ("id" in products_cart[j] && products_cart[j].id == products[i].id) {
                              // id exists in our products_cart
                              qty_in_cart = products_cart[j].qty;
                              break;
                            }
                          }

                          if (productsInventory[products[i].id] * 1 < (products[i].qty * 1 + qty_in_cart * 1)) {
                            messages.push('We only have ' + (productsInventory[products[i].id]*1 - qty_in_cart*1) + ' item(s) of ' + products[i].name + ' left' );
                          }
                        }
                    } else {
                        // Cart is Empty
                        //alert('cart is empty');
                        for (var i=0;i<products.length;i++) {
                          if (productsInventory[products[i].id] * 1 < products[i].qty * 1) {
                            messages.push('We only have ' + productsInventory[products[i].id] + ' item(s) of ' + products[i].name + ' left' );
                          }
                        }
                    }

                    if (messages.length == 0) {
                      validated = true;
                    } else {
                      var m = '';
                      for (var i=0;i<messages.length;i++) {
                          m += messages[i] + "\n";
                      }
                      alert(m);
                    }

                    return validated;  
                    //return false;  
                  }

                function getProperties() {
                  var bundle_properties = {};
                  var bundle_properties_counter = 1;
                  jQuery('#line-item-properties select > option:selected').each(function(e){
                    bundle_properties[bundle_properties_counter+"-"+jQuery(this).val()] = jQuery(this).text();
                    bundle_properties_counter+=1;
                  });
                  return bundle_properties;
                }

                function CallAddItemWithProperties() {
                  if (InventoryValidated() == true) {
                    var bundle_properties = getProperties();
                    Shopify.addItemWithProperties({{ current_variant.id }},jQuery('#Quantity').val(),bundle_properties,function(){window.location.href = '/cart';});
                  }
                }
              </script>

              {% comment %}Bundle product item{% endcomment %}
              <div class="product-form__item product-form__item--submit">
                <input type="button" name="bundle-add" id="Bundle-AddToCart-{{ section.id }}" {% unless current_variant.available %}disabled="disabled"{% endunless %} class="btn product-form__cart-submit{% if product.options.size == 1 and product.variants[0].title == 'Default Title' %} product-form__cart-submit--small{% endif %}" 
                value="{% unless current_variant.available %}{{ 'products.product.sold_out' | t }}{% else %}{{ 'products.product.add_to_cart' | t }}{% endunless %}" 
                onclick="CallAddItemWithProperties()">
              </div>

              {% comment %}
              <div class="product-form__item product-form__item--submit">
                <button type="submit" name="add" id="AddToCart-{{ section.id }}" {% unless current_variant.available %}disabled="disabled"{% endunless %} class="btn product-form__cart-submit{% if product.options.size == 1 and product.variants[0].title == 'Default Title' %} product-form__cart-submit--small{% endif %}">
                  <span id="AddToCartText-{{ section.id }}">
                    {% unless current_variant.available %}
                      {{ 'products.product.sold_out' | t }}
                    {% else %}
                      {{ 'products.product.add_to_cart' | t }}
                    {% endunless %}
                  </span>
                </button>
              </div>
              {% endcomment %}
            {% endif %}
          </form>

        </div>

        <div class="product-single__description rte" itemprop="description">
          {{ product.description }}
        </div>

        {% if section.settings.show_share_buttons %}
          {% include 'social-sharing', share_title: product.title, share_permalink: product.url, share_image: product %}
        {% endif %}
      </div>
    </div>
  </div>
</div>

{% if settings.product_related_enable %}
  {% include 'related-products' %}
{% endif %}

{% comment %}Customer Reviews{% endcomment %}
<div id="shopify-product-reviews" data-id="{{product.id}}">{{ product.metafields.spr.reviews }}</div>

{% if collection %}
  <div class="text-center return-link-wrapper">
    <a href="{{ collection.url }}" class="btn btn--secondary btn--has-icon-before return-link">
      {% include 'icon-arrow-left' %}
      {{ 'products.product.back_to_collection' | t: title: collection.title }}
    </a>
  </div>
{% endif %}

{% unless product == empty %}
  <script type="application/json" id="ProductJson-{{ section.id }}">
    {{ product | json }}
  </script>
{% endunless %}

{% schema %}
  {
    "name": "Product pages",
    "settings": [
      {
        "type": "select",
        "id": "image_size",
        "label": "Image size",
        "options": [
          {
            "value": "small",
            "label": "Small"
          },
          {
            "value": "medium",
            "label": "Medium"
          },
          {
            "value": "large",
            "label": "Large"
          },
          {
            "value": "full",
            "label": "Full-width"
          }
        ],
        "default": "medium"
      },
      {
        "type": "checkbox",
        "id": "show_quantity_selector",
        "label": "Show quantity selector",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "show_variant_labels",
        "label": "Show variant labels",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "show_vendor",
        "label": "Show vendor",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "enable_zoom",
        "label": "Enable image zoom",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "show_share_buttons",
        "label": "Show social sharing buttons",
        "default": true
      }
    ]
  }
{% endschema %}
